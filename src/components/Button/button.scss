@mixin btn-color($color) {
    /*@if $color == primary {
        &, &.-#{$color}
    } @else {}*/

    &.-#{$color} {
        $color: --color-#{$color};

        background-color: var(#{$color});
        border-color: var(#{$color});
        color: var(#{$color}-ink);

        &:hover:not(:disabled) {
            background-color: var(#{$color}-light);
            border-color: var(#{$color}-light);
        }

        &:active:not(:disabled) {
            background-color: var(#{$color}-dark);
            border-color: var(#{$color}-dark);
        }

        &.-bordered {
            color: var(#{$color});

            &:hover:not(:disabled) {
                color: var(#{$color}-light);
            }

            &:active:not(:disabled) {
                color: var(#{$color}-dark);
            }
        }
    }
}

/*** Button ***/
.btn {
    font-size: 2rem;
    font-weight: 500;
    line-height: 1;
    text-decoration: none;
    text-align: center;
    vertical-align: middle;
    position: relative;
    overflow: hidden;
    white-space: nowrap;
    min-width: 6rem;
    min-height: 6rem;
    padding: var(--btn-padding);
    margin-bottom: 0;
    display: inline-flex;
    align-content: center;
    align-items: center;
    justify-content: center;
    border: var(--btn-border-width) solid transparent;
    border-radius: 0;
    outline: none;
    user-select: none;
    cursor: pointer;
    transition: color .18s ease-in-out, background-color .18s ease-in-out, border-color .18s ease-in-out, box-shadow .18s ease-in-out;

    &.-rounded {
        border-radius: var(--btn-border-radius) !important;
    }

    &.-bordered {
        background-color: transparent !important;
    }

    &.-shadowed:not(:disabled) {
        box-shadow: 0 .2rem .2rem 0 rgba(0, 0, 0, .2);
    }

    &:hover:not(:disabled) {
        &.-shadowed {
            box-shadow: 0 .4rem .6rem 0 rgba(0, 0, 0, .2);
        }
    }

    &:focus {
        outline: none;

        &:not(:disabled) {
            box-shadow: 0 0 0 5px rgba(0, 0, 0, .1);
        }
    }

    &:disabled {
        cursor: default;
        opacity: .7;
    }

    &.-bordered:not(:focus),
    &:disabled,
    &:active {
        box-shadow: none !important;
    }

    /*& {
        background-color: var(--color-primary);
        border-color: var(--color-primary);
        color: white;

        &:hover:not(:disabled) {
            background-color: var(--color-primary-light);
            border-color: var(--color-primary-light);
        }

        &:active:not(:disabled) {
            background-color: var(--color-primary-dark);
            border-color: var(--color-primary-dark);
        }

        .-bordered {
            color: var(--color-primary);

            &:hover:not(:disabled) {
                color: var(--color-primary-light);
            }

            &:active:not(:disabled) {
                color: var(--color-primary-dark);
            }
        }
    }*/


    /*** Primary ***/
    /*&,
    &.-primary {
        background-color: var(--color-primary);
        border-color: var(--color-primary);
        color: white;

        &:hover:not(:disabled) {
            background-color: var(--color-primary-light);
            border-color: var(--color-primary-light);
        }

        &:active:not(:disabled) {
            background-color: var(--color-primary-dark);
            border-color: var(--color-primary-dark);
        }
    }

    &.-bordered,
    &.-primary.-bordered {
        color: var(--color-primary);

        &:hover:not(:disabled) {
            color: var(--color-primary-light);
        }

        &:active:not(:disabled) {
            color: var(--color-primary-dark);
        }
    }*/

    @include btn-color(primary);
    @include btn-color(secondary);
    @include btn-color(accent);
}

